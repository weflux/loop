syntax = "proto3";

package loopify.proxy;

import "shared/shared.proto";

option go_package = "github.com/weflux/loopify/protocolproxy;proxypb";


service Proxy {
  // 连接认证
  rpc Connect(ConnectRequest) returns (ConnectReply) {}
  // 检查是否可以订阅该频道
  rpc Subscribe(SubscribeRequest) returns (SubscribeReply) {}
  // 订阅频道后的回调
  rpc Subscribed(SubscribedRequest) returns (SubscribedReply) {}
  // 取消订阅频道后的回调
  rpc Unsubscribed(UnsubscribedRequest) returns (UnsubscribedReply) {}
  // RPC 调用
  rpc RPC(RPCRequest) returns (RPCReply) {}
  // 发布消息的回调
  rpc Publish(PublishRequest) returns (PublishReply) {}
  // 刷新 Session
  rpc Refresh(RefreshRequest) returns (RefreshReply) {}
  //  rpc SubRefresh(SubscribeRequest) returns (SubRefreshReply) {}
}

message Error {
  int32 code = 1;
  string message = 2;
  bool temporary = 3;
  Disconnect disconnect = 4;
}

message Disconnect {
  uint32 code = 1;
  string reason = 2;
}



message ConnectRequest {

  message Payload {
    string username = 1;
    string password = 2;
  }

  string id = 1;
  shared.Metadata metadata = 2;
  Payload payload = 3;
}

message ConnectReply {
  Error error = 1;
}

message SubscribeRequest {
  string topic = 1;
  string client = 2;
  string user = 3;
}

message SubscribeReply {
  int32 code = 1;
}

message SubscribedRequest {
  string topic = 1;
  string client = 2;
}

message SubscribedReply {
}

message UnsubscribedRequest {
  string topic = 1;
  string client = 2;
}

message UnsubscribedReply {
}


message RPCRequest {
  string id = 1;
  shared.Metadata metadata = 2;
  string command = 3;
  string content_type = 4;
  string payload_text = 5;
  bytes payload_bytes = 6;

}

message RPCReply {
  string id = 1;
  Error error = 2;
  shared.Metadata metadata = 3;
  string content_type = 4;
  string payload_text = 5;
  bytes payload_bytes = 6;
}

message PublishRequest {

}

message PublishReply {

}

message RefreshRequest {
  string client = 1;
  string user = 2;
}

message RefreshReply {

}

message SubRefreshRequest {

}

message SubRefreshReply {

}